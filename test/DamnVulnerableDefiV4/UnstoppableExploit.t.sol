// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.0;

import {DamnValuableToken} from '@damn-vulnerable-defi-v4/DamnValuableToken.sol';
import {UnstoppableVault, Owned} from '@damn-vulnerable-defi-v4/unstoppable/UnstoppableVault.sol';
import {UnstoppableMonitor} from '@damn-vulnerable-defi-v4/unstoppable/UnstoppableMonitor.sol';
import '@forge-std/Test.sol';
import '@forge-std/console2.sol';

contract UnstoppableExploit is Test {
  DamnValuableToken token;
  UnstoppableVault target;
  address deployer = makeAddr('deployer');
  address exploiter = makeAddr('exploiter');

  function setUp() public {
    vm.startPrank(deployer);
    token = new DamnValuableToken();
    target = new UnstoppableVault({
      _token: token,
      _owner: deployer,
      _feeRecipient: deployer
    });
    console2.log('Target contract deployed');
    vm.stopPrank();
  }

  function testExploit() public {
    // TODO
  }
}
